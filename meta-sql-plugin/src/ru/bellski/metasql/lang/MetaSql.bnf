{

 parserClass="ru.bellski.metasql.lang.parser.MetaSqlParser"
 parserUtilClass="ru.bellski.metasql.lang.parser.MetaSqlParserUtil"


    implements = "ru.bellski.metasql.lang.psi.MetaSqlElement"
    extends = "ru.bellski"

    psiClassPrefix="MetaSql"

    psiImplClassSuffix="Impl"

    psiPackage="ru.bellski.metasql.lang.psi"

    psiImplPackage="ru.bellski.metasql.lang.psi.impl"

    elementTypeHolderClass="ru.bellski.metasql.lang.psi.MetaSqlTypes"
    elementTypeClass="ru.bellski.metasql.lang.psi.MetaSqlElementType"
    tokenTypeClass="ru.bellski.metasql.lang.psi.MetaSqlTokenType"

 tokens=[
     SEMI=';'
     EQ='='

     METADATA="Metadata"
     RETURNRULE="ReturnRule"

     LIST="List"
     BOOLEAN="Boolean"
     INTEGER="Integer"
     SINGLE="Single"
   ]

}

root ::= metaSqlBody

metaSqlBody ::= clause_group?
{pin = 1 mixin="ru.bellski.metasql.lang.psi.impl.MetaSqlBodyImpl" implements="ru.bellski.metasql.lang.psi.MetaSqlBody"}


private clause_group ::= returnRuleClause

returnRuleClause ::= 'ReturnRule' '=' returnRuleValue ';'
{pin=2 mixin="ru.bellski.metasql.lang.psi.impl.ReturnRuleClauseImpl" implements="ru.bellski.metasql.lang.psi.ReturnRuleClause" recoverWhile=returnRuleClause_recovery}

private returnRuleClause_recovery ::= !(';' | 'ReturnRule' '=')


returnRuleValue ::= 'List' | 'Boolean' | 'Integer' | 'Single'
{mixin="ru.bellski.metasql.lang.psi.impl.ReturnRuleValueImpl" implements="ru.bellski.metasql.lang.psi.ReturnRuleValue" recoverWhile=returnRuleValue_recovery}

private returnRuleValue_recovery ::= !(';' | 'List')

















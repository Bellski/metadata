{

 parserClass="ru.bellski.metasql.lang.parser.MetaSqlParser"
 parserUtilClass="ru.bellski.metasql.lang.parser.MetaSqlParserUtil"


    implements = "ru.bellski.metasql.lang.psi.MetaSqlElement"
    extends = "ru.bellski.metasql.lang.psi.impl.MetaSqlCompositeElementImpl"

    psiClassPrefix="MetaSql"

    psiImplClassSuffix="Impl"

    psiPackage="ru.bellski.metasql.lang.psi"

    psiImplPackage="ru.bellski.metasql.lang.psi.impl"

    elementTypeHolderClass="ru.bellski.metasql.lang.psi.MetaSqlTypes"
    elementTypeClass="ru.bellski.metasql.lang.psi.MetaSqlElementType"
    tokenTypeClass="ru.bellski.metasql.lang.psi.MetaSqlTokenType"

    psiImplUtilClass="ru.bellski.metasql.util.MetaSqlUtils"

 tokens=[
     KEYWORD='keyword';
     SEMI=';'
     EQ='='
     LBRACKET="["
     RBRACKET="]"
     COMMA=","

     METADATA="Metadata"
     RETURNRULE="ReturnRule"
     PARAMETERS="Parameters"

     LIST="List"
     BOOLEAN="Boolean"
     INTEGER="Integer"
     SINGLE="Single"

     STRING='String'
     LONG='Long'
     DATE='Date'

     M_IDENTIFIER="m_identifier"

   ]

}

root ::= body

body ::= clauseList? {recoverWhile=metaSqlBody_recovery}
private metaSqlBody_recovery ::= !';'

private clauseList ::= returnRuleClause metadataClause? parameterArray?

returnRuleClause ::= 'ReturnRule' returnRuleInit ';' {pin=1}
metadataClause ::= 'Metadata' metadataInit ';' {pin=1}


returnRuleInit ::= '=' returnRuleValue {pin=1 recoverWhile=returnResultInit_recovery}
returnRuleValue ::= 'List' | 'Boolean' | 'Integer' | 'Single'

private returnResultInit_recovery ::= !(';' | 'Metadata' '=')

metadataInit ::= '=' metadataReference {pin=1 recoverWhile=metadataInit_recovery}
metadataReference ::= 'm_identifier'
{mixin="ru.bellski.metasql.lang.psi.impl.MetadataReferenceImpl" implements="ru.bellski.metasql.lang.psi.MetadataReference"}
private metadataInit_recovery ::= !';'


parameterArray ::= 'Parameters' '=' '[' (parameterList ','?)? ']' {pin=1}

parameterList ::= (parameter (',' parameter)*) {recoverWhile=parameterList_recovery}
private parameterList_recovery::= !']'

parameter ::= parameterType parameterKeyword {pin=1}
parameterKeyword ::= param_keyword
parameterType ::= 'String' | 'Long' | 'Date' | 'Boolean'














